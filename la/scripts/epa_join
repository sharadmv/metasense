#!/usr/bin/env python
import pandas as pd
import sys
from argparse import ArgumentParser

def parse_args():
    argparser = ArgumentParser()

    argparser.add_argument('epa_file')
    argparser.add_argument('epa_temp_file')
    argparser.add_argument('--max', action='store_true')

    return argparser.parse_args()

if __name__ == "__main__":
    args = parse_args()

    data = pd.read_csv(sys.stdin, index_col='unixtime')
    data.index = pd.to_datetime(data.index, unit='s')

    groups = data.groupby(lambda x: "%u/%u/%u %u:00:00" % (x.year, x.month, x.day, x.hour))
    if args.max:
        hour_data = groups.max()
    else:
        hour_data = groups.mean()
    hour_data.index = pd.to_datetime(hour_data.index).tz_localize('UTC').tz_convert('US/Pacific')
    hour_data = hour_data.sort_index()

    epa_co_data = pd.read_csv(args.epa_file, index_col='time')
    epa_co_data.index = pd.to_datetime(epa_co_data.index).tz_localize('US/Pacific')

    epa_temp_data = pd.read_csv(args.epa_temp_file, index_col='time')
    epa_temp_data.index = pd.to_datetime(epa_temp_data.index).tz_localize('US/Pacific')
    epa_temp_data.columns = ['epa-temperature-F', 'epa-humidity', 'epa-pressure']
    epa_temp_data = epa_temp_data.groupby(
        lambda x: ("%u/%u/%u %u:00:00" % (x.year, x.month, x.day, x.hour))
    ).mean()
    epa_temp_data.index = pd.to_datetime(epa_temp_data.index).tz_localize('US/Pacific')
    epa_temp_data = epa_temp_data.sort_index()
    epa_data = epa_co_data.merge(epa_temp_data, how='outer', left_index=True, right_index=True).dropna()

    merged_data = hour_data.merge(epa_data, how='outer', left_index=True, right_index=True).dropna()
    print(merged_data.to_csv(index_label='time'))
